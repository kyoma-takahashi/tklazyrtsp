On cmd on Communication host,

start \
ruby tcpserver2stdout.rb <listen port> \
| ruby cache.rb <results_temp path> \
2> log

(communicator <results_temp path> | tee.exe log) 3>&2 2>&1 1>&3 \
| ruby tee2process.rb "ruby stdin2tcpsocket.rb <source_receptor address and port>" \
| ruby decode.rb \
> source_dump 2> log

tee.exe is in msys. Alternative: tee.bat in http://stackoverflow.com/questions/10711839/using-a-custom-tee-command-for-bat-file/10719322#10719322
ruby tee2process.rb "..." cannot be replaced by bash -c "tee >(ruby stdin2tcpsocket.rb ...)"

On cmd on Calculation host,

ruby tcpserver2stdout.rb <listen port> \
| ruby decode.rb \
| ruby calculate.rb \
| ruby tee2process.rb \
"ruby summarise.rb | ruby stdin2tcpsocket.rb <results_receptor address and port>" \
"ruby publish.rb <shared file path>" \
> results_dump 2> log

ruby tee2process.rb "..." cannot be replaced by tee >(results_feeder ...) even on msys.
bash: cannot make pipe for process substitution: Function not implemented

--

To feed results to communicator, there could be some alternative
implementations, but they are not so good.

The followings cannot be implemented since no fork.

  Communication: communicator <listen port> <results_feeder address>
    Calculation: results_feeder <communicator address and port>

The followings could be time consuming.

    Calculation: results_feeder <listen port> <communicator address>
  Communication: communicator <results_feeder URL>

--

Optionally in addition,
    Calculation: order_receptor <listen port> <orderer address> <order file path>
    Calculation: calculator <order file path>

--
